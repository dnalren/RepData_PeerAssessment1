source("~/Documents/androidnotes/windab/aesoDataGrab.R")
p = allTogetherNow("01012015","01312015",farms)
head(p)
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
p = allTogetherNow("01012015","01312015",farms)
head(p)
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
p = allTogetherNow("01012015","01312015",farms)
head(p)
colnames(p)[2] = "Price"
head(p)
for (i in 3:ncol(p)){
colnames(p)[i] = farm_names[i-2]
}
for (i in 3:ncol(p)){
+     colnames(p)[i] = farms[i-2]
+ }
ncol(p)
for (i in 3:ncol(p)){
colnames(p)[i] = farms[i-2]
}
head(p)
class(p)
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
p = allTogetherNow("01012015","01312015",farms)
head(p)
?while
?while
?repeat
?str
date.lt = as.POSIXlt("2015-01-02")
mon = date.lt$mon +2
year = date.lt$year
year = year + as.integer(mon ==13)
as.integer(mon ==13)
as.integer(mon ==12)
date.lt$mon
ISOdate(1990+year,mon,1,hour=0, tz = attr(date.lt,"tz"))
ISOdate(1990+year,mon,1,hour=0)
ISOdate(1900+year,mon,1,hour=0)
iso = ISOdate(1900+year,mon,1,hour=0)
t = as.POSIXct(iso)-86400
t
t + (as.POSIXlt(iso)$isdst-as.POSIXlt(result)$isdst)*3600
t + (as.POSIXlt(iso)$isdst-as.POSIXlt(t)$isdst)*3600
as.Date(t)
unclass(as.Date(t))
unclass(t
unclass(t)
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
eom("01122015")
eom(as.POSIXct("01122015","%m%d%Y")
eom(as.POSIXct("01122015","%m%d%Y"))
eom(as.POSIXct(as.Date("01122015","%m%d%Y"))
eom(as.POSIXct(as.Date("01122015","%m%d%Y")))
eom(as.POSIXct("2015-01-01")
eom(as.POSIXct("2015-01-01"))
r = eom(as.POSIXct("2015-01-01"))
r
eom(r[2])
r[2]
eom(as.POSIXct(r[2])
eom(as.POSIXct(r[2]))
?strptime
as.POSIXlt(r[2])
eom(as.POSIXlt(r[2]))
eom(as.POSIXct(r[2]),tz = attr(r[2],"tz"))
attr(r[2],"tz")
eom(as.POSIXct(r[2]),tz = "MST")
eom(as.POSIXct(r[2],tz = "MST"))
as.Date(r[2])
eom(as.POSIXct(as.date(r[2])))
eom(as.POSIXct(as.Date(r[2])))
t = as.Date(r[2])
eom(t)
as.POSIXlt(r[2])
d = as.POSIXlt(r[2])
d$mon
d$year
iso = ISOdate(1900+115,d$mon,1,hour = 0)
iso
eom(t)
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
eom(t)
e = eom(t)
e
e[1>e[2]]
e[1]>e[2]
e[1]<e[2]
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
eom(01012012)
eom("01012012")
eom("01012012")
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
eom("01012012")
a = eom("01012012")
a
a = eom("01012012")
a
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
a = eom("01012012")
a
as.character(a"%m%d%Y")
as.character(a,"%m%d%Y")
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
a = eom("01012012")
a
a[2]-a[1]
a[2]<a[1]
unclass(as.Date(a[1]))
as.Date(a[1])
as.Date(a[1],"%m%d%Y")
unclass(as.Date(a[1]),"%m%d%Y")
unclass(as.Date(a[1],"%m%d%Y"))
a = data.frame(1,2,3,4)
a
b = data.frame(5,6,7,8)
c = c(a,b)
c
?data.frame
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
a = list(c(1:4))
a
b = list(c(5:8))
b
c = c(a,b)
c
c[[1]] = c(c[[1]],c(1:4))
c
c = list(as.vector(),as.vector())
c = list(vector(),vector())
c
unlist(c)
d = unlist(c)
d
c = c(a,b)
d = unlist(c)
d
c
?split
?lapply
c
lapply(c,mean)
length(c[[1]])
length(c)
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
dataGrabber("01012015","01312015")
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
dataGrabber("01012015","01312015")
?file.exists
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
dataGrabber("01012015","01312015")
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
dataGrabber("01012015","01312015")
prod = read.csv(paste0("~/Documents/androidnotes/windab/historicalreports/Prod_",startdate,".csv"),skip = 8)
prod = read.csv(paste0("~/Documents/androidnotes/windab/historicalreports/Prod_",01012015,".csv"),skip = 8)
prod = read.csv(paste0("~/Documents/androidnotes/windab/historicalreports/Prod_","01012015",".csv"),skip = 8)
temp_farm = prod[prod[,3]=="ARD1",]
temp_farm
for (j in 1:nrow(temp_farm)){
monthly_data = c(monthly_data,as.vector(as.matrix(temp_farm)[j,4:27]))
}
monthly_data = vector()
for (j in 1:nrow(temp_farm)){
monthly_data = c(monthly_data,as.vector(as.matrix(temp_farm)[j,4:27]))
}
dataGrabber("01012015","01312015")
farms = getWindFarmNames()
temp_farm = prod[prod[,3]==farms[1],]
temp_farm = prod[prod[,3]==farms[2],]
temp_farm = prod[prod[,3]==farms[3],]
temp_farm = prod[prod[,3]==farms[4],]
temp_farm = prod[prod[,3]==farms[5],]
temp_farm = prod[prod[,3]==farms[6],]
head(temp_farm,1)
head(temp_farm,2)
head(temp_farm,n=3)
temp_farm = prod[prod[,3]==farms[5],]
temp_farm = prod[prod[,3]==farms[6],]
temp_farm = prod[prod[,3]==farms[7],]
temp_farm = prod[prod[,3]==farms[8],]
temp_farm = prod[prod[,3]==farms[9],]
temp_farm = prod[prod[,3]==farms[10],]
farms[8]
temp_farm = prod[prod[,3]==farms[11],]
temp_farm = prod[prod[,3]==farms[12],]
temp_farm = prod[prod[,3]==farms[13],]
temp_farm = prod[prod[,3]==farms[14],]
temp_farm = prod[prod[,3]==farms[15],]
temp_farm = prod[prod[,3]==farms[16],]
temp_farm = prod[prod[,3]==farms[17],]
temp_farm = prod[prod[,3]==farms[18],]
temp_farm = prod[prod[,3]==farms[19],]
temp_farm = prod[prod[,3]==farms[8],]
temp_farm = prod[prod[,3]==farms[6],]
farms[6]
class(temp_farm)
rnow(temp_farm)
nrow(temp_farm)
?NA
?rep
rep(is.na,5)
rep.int(is.na,5)
rep.int(NA,5)
vector(is.na)
vector(1,is.na)
a = vector()
a = (a,is.na)
x = is.na
x
is.na <- x
x <- is.na
class(x)
a = NA
class(a)
a = as.numeric(NA)
class(a)
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
dataGrabber("01012015","01312015")
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
dataGrabber("01012015","01312015")
do = dataGrabber("01012015","01312015")
head(do, n=2)
do[[4]][5]
do[[4]][9]
do = dataGrabber("01012015","02132015")
eom("01012015")
a = eom("01012015")
a
unclass(as.Date(a[1],"%m%d%Y"))
unclass(as.Date("02132015","%m%d%Y"))
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
do = dataGrabber("01012015","02132015")
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
do = dataGrabber("01012015","02132015")
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
do = dataGrabber("01012015","02132015")
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
do = dataGrabber("01012015","02132015")
do = dataGrabber("01012015","02132015")
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
do = dataGrabber("01012015","02132015")
x = as.numeric()
class(x)
class(x) == "numeric"
x = "empty"
x == "empty"
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
do = dataGrabber("01012015","02132015")
do[[1]]
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
do = dataGrabber("01012015","01132015")
do
d = rowSums(do, dims = 4:27)
d = rowSums(do, dims = 4)
d = rowSums(do)
d = ad.numeric(do[,4:27])
d = as.numeric(do[,4:27])
d = do[,4:27]
d = rowSums(do, dims = 4:17)
d = rowSums(do, dims = 17)
d = do[,4:17]
d = as.numeric(do[,4:17])
d = as.numeric(matrix(do[,4:17])
d = as.numeric(matrix(do[,4:17]))
class(d)
haed(d)
head(d)
d$X4 = as.numeric(d$X4)
d$X5 = as.numeric(d$X5)
class(d$X6)
class(d$X6[1])
class(d$X4[1])
d$X6 = as.numeric(d$X6)
d$X7 = as.numeric(d$X7)
d = d[,1:4]
head(d)
rowSums(d)
rowSums(4)
rowSums(d dims = 2:4)
rowSums(d, dims = 2:4)
rowSums(d, dims = 2)
rowSums(d, dims = 4)
a = c(1:4)
b = c(5:8)
c = c(9:12)
d = matrix()
d = c(a,b,c,d)
d
d[,1] =a
d = matrix()
d[,1] =a
d[1:4,1] = a
?paste
a = list(c(1:4))
b = list(c(5:8))
c = c(a,b)
c
d = matrix(unlist(c),nrow = length(c[[1]]))
d
e = rowSums(d)
e
d = rowSums(matrix(unlist(c),nrow = length(c[[1]])))
d = c(c,list(rowSums(matrix(unlist(c),nrow = length(c[[1]])))))
d
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
do = dataGrabber("01012015","01132015")
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
do = dataGrabber("01012015","01132015")
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
do = dataGrabber("01012015","01132015")
head(do)
rep.int(NA,12)
a = rep.int(NA,12)
b = as.numeric(a)
b
c = list(b)
c
prod = read.csv(paste0("~/Documents/androidnotes/windab/historicalreports/Prod_","01012015",".csv"),skip = 8)
farms = getWindFarmNames()
temp_farm = prod[prod[,3]==farms[8],]
temp_farm = prod[prod[,3]==farms[6],]
nrow(temp_farm)
nrow(temp_farm)==0
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
do = dataGrabber("01012015","01132015")
head(do)
tail(do)
do[[23]]
ap = getProd("01012015",farms)
head(ap)
?rowSums
ap = getProd("01012015",farms)
head(ap)
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
ap = getProd("01012015",farms)
nrow(ap[[1]])
ap[[1]]
length(ap[[1]])
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
ap = getProd("01012015",farms)
head(ap)
ap[[20]]
tail(ap)
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
ap = getProd("01012015",farms)
tail(ap)
temp_farm = prod[prod[,3]==farms[8],]
temp_farm[1,4:27]
as.vector(temp_farm[1,4:27])
as.vector(as.matrix(temp_farm[1,4:27]))
as.vector(as.numeric(as.matrix(temp_farm[1,4:27])))
a = as.vector((as.matrix(temp_farm[1,4:27])))
length(a)
b = c(a[1:2], NA, a{3:length(a)})
b = c(a[1:2], NA, a[3:length(a)])
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
do = dataGrabber("03012015","03312015")
prod = read.csv(paste0("~/Documents/androidnotes/windab/historicalreports/Prod_","03012015",".csv"),skip = 8)
temp_farm = prod[prod[,3]==farms[1],]
temp_farm
temp = as.vector(as.matrix(temp_farm)[8,4:27])
length(temp)
temp
length(as.numeric(temp))
as.numeric(temp)
a = temp[!is.na(temp)]
a
a = temp[!is.na(as.numeric(temp))]
a
length(a)
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
do = dataGrabber("03012015","03312015")
tail(do)
head(do)
a = c(1:10)
b = c(1:9,NA)
c = c(1:10)
d = c(a,b,c)
d
b = c(1:9)
b = c(b[1:2],NA,b[3:length(b)])
d = c(a,b,c)
d
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
ap = getProd("03012015",farms)
ap[[1]]
a
as.character(a)
temp
a = temp[!is.na((temp))]
a
?is.blank
?is.empty
source("~/Documents/androidnotes/windab/aesoDataGrab.R")
ap = getProd("03012015",farms)
ap[[1]]
do = dataGrabber("03012015","03312015")
ap[[1]]
c = c(c[1], mean(c[2:3]), c[5:length(c)] )
c
source("http://bioconductor.org/bioclite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
setwd("~/Documents/coursera notes/Data Science/StatisticalInference/Project")
setwd("~/Documents/coursera notes/Data Science/ReproducibleResearch/project1")
data_csv = read.csv(unz("activity.zip","activity.csv"))
setwd("~/Documents/coursera notes/Data Science/ReproducibleResearch/project1/RepData_PeerAssessment1")
data_csv = read.csv(unz("activity.zip","activity.csv"))
summary(data_csv)
library(lubridate)
library(dplyr)
head(data_csv)
class(data_csv)
data_csv = mutate(data_csv, date = as.POSIXct(date, format = "%Y-%m-%d")
)
head(data_csv)
class(data_csv$date[1])
?factor
data_csv = mutate(data_csv, day = factor(yday(date))
)
head(data_csv)
a = factor(wday(data_csv$date), levels = c(1:7), labels = c("weekend","weekday","weekday","weekday","weekday","weekday","weekend" ))
head(a)
weekday = c(2:6)
a = factor(wday(data_csv$date) %in% c(2:6), labels = c("weekend", "weekday"))
head(a)
wday(data_csv$data[1])
wday(data_csv$date[1])
summary(data_csv)
str(data_csv)
str(a)
data_csv = mutate(data_csv, wday = factor(wday(data_csv$date) %in% c(2:6), labels = c("weekend", "weekday")))
head(data_csv)
data_g = group_by(data_csv, day, wday)
mean_steps = summarise(data_g, MeanDailySteps = mean(steps, na.rm = TRUE))
mean_steps
total_steps = summarise(data_g, DailySteps = sum(steps, na.rm = TRUE))
head(total_steps)
h = hist(total_steps$DailySteps, freq = TRUE, xlab = "", main = "Histogram of Total Daily Steps", col = "lightgrey", density = 15)
?memdian
?median
mean_dailysteps = mean(total_steps$DailySteps, na.rm = TRUE)
median_dailysteps = median(total_steps$DailySteps, na.rm = TRUE)
abline(v = mean_dailysteps, col = "blue", lwd = 2)
abline(v = median_dailysteps, col = "blue", lwd = 2)
abline(v = mean_dailysteps, col = "green", lwd = 2)
abline(v = median_dailysteps, col = "blue", lwd = 2)
text(mean_dailysteps , max(h$density)*.75, paste("Mean = ",mean_dailysteps),, pos = 2, col = "green")
text(mean_dailysteps , max(h$counts)*.75, paste("Mean = ",round(mean_dailysteps,0)),, pos = 2, col = "green")
text(mean_dailysteps , max(h$counts)*.75, paste("Mean = /n",round(mean_dailysteps,0)),, pos = 2, col = "green")
text(mean_dailysteps , max(h$counts)*.75, paste("Mean = \n",round(mean_dailysteps,0)),, pos = 2, col = "green")
data_csv = mutate(data_csv, seqnum = seq(1:length(data_csv$date)))
head(data_csv)
data_g = group_by(data_csv, day, wday, interval)
ave_interval = summarise(data_g, IntervalAverage = mean(interval, na.rm = TRUE))
head(aveinterval)
head(ave_interval)
class(data_g)
groups(data_g)
ave_interval = summarise(data_g[[3]], IntervalAverage = mean(interval, na.rm = TRUE))
?summarise
data_day = group_by(data_csv, day)
data_weekday = group_by(data_csv, wday)
data_interval = group_by(data_csv,interval)
total_steps = summarise(data_day, DailySteps = sum(steps, na.rm = TRUE))
ave_interval = summarise(data_interval, IntervalAverage = mean(interval, na.rm = TRUE))
head(ave_interval)
ave_interval = summarise(data_interval, IntervalAverage = mean(steps, na.rm = TRUE))
head(ave_interval)
plot(ave_interval$interval, ave_interval$IntervalAverage)
plot(ave_interval$interval, ave_interval$IntervalAverage, x.lines = TRUE)
plot(ave_interval$interval, ave_interval$IntervalAverage, xy.lines = TRUE)
plot(ave_interval$interval, ave_interval$IntervalAverage, plot.type = "1")
plot(ave_interval$interval, ave_interval$IntervalAverage, plot.type = "0")
plot(ave_interval$interval, ave_interval$IntervalAverage, plot.type = "ave_interval")
ave_interval
tail(ave_interval)
data_interval = group_by(data_csv,interval,day)
ave_interval = summarise(data_interval, IntervalAverage = mean(steps, na.rm = TRUE))
tail(ave_interval)
data_interval = group_by(data_csv,interval)
ave_interval = summarise(data_interval, IntervalAverage = mean(steps, na.rm = TRUE))
ave_interval[[1]]
plot(ave_interval$interval, ave_interval$IntervalAverage, type = 'l')
plot(ave_interval$interval, ave_interval$IntervalAverage, type = 'l', xlab="Interval (hhmm)", ylab = "Average Number of Steps", main = "Average Number of Steps per 5 Minute Interval")
?max
?find
?gsub
?find
max_interval_val = round(max(ave_interval_IntervalAverage, na.rm = TRUE),0)
max_interval_val = round(max(ave_interval$IntervalAverage, na.rm = TRUE),0)
max_interval = ave_interval$interval[ave_interval$IntervalAverage == ave_interval_val]
max_interval = ave_interval$interval[ave_interval$IntervalAverage == max_interval_val]
ave_interval$IntervalAverage == max_interval_val
max_interval_val = max(ave_interval_IntervalAverage, na.rm = TRUE)
max_interval = ave_interval$interval[ave_interval$IntervalAverage == max_interval_val]
max_interval_val = max(ave_interval$IntervalAverage, na.rm = TRUE)
max_interval = ave_interval$interval[ave_interval$IntervalAverage == max_interval_val]
grep(max_interval,ave_interval$interval)
?grep
?point
?points
points(x = grep(max_interval,ave_interval$interval)[1],y = max_interval_val, col = "red", pch = 19)
points(x =max_interval,y = max_interval_val, col = "red", pch = 19)
text(max_interval, max_interval_val, paste("Max Interval = ", max_interval_val, "@" , max_interval))
text(max_interval, max_interval_val, paste("Max Interval = ", round(max_interval_val,0), "@" , max_interval))
text(max_interval, max_interval_val, paste("Max Interval = ", round(max_interval_val,0), "@" , max_interval), pos = 4)
